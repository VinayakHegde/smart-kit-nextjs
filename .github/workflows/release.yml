name: Release Packages

on:
  push:
    branches:
      - main
    # paths:
    #   - 'src/**'

env:
  CI: true
  PNPM_CACHE_FOLDER: .pnpm-store
  HUSKY: 0

jobs:
  release:
    runs-on: ubuntu-latest
    permissions: write-all

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up node and npmrc
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: https://npm.pkg.github.com/
          scope: '@vinayakhegde'
          always-auth: true

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9.9
          store-path: ${{ env.PNPM_CACHE_FOLDER }}
          cache: pnpm

      - name: Install dependencies
        run: pnpm i --frozen-lockfile

      - name: Create versions
        uses: changesets/action@v1
        with:
          version: pnpm ci:version
          commit: 'chore(deps): update versions --no-verify'
          title: 'chore: update versions'
          publish: pnpm ci:release
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.RELEASE_TOKEN }}

      - name: Commit and Tag
        id: commit_and_tag
        run: |
          if [[ -n "$(git status --porcelain)" ]]; then
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            VERSION=$(node -p "require('./package.json').version")
            git add .
            git commit -m "chore: release version $VERSION [skip ci]"
            git tag v$VERSION
            git push origin main --tags
          else
            echo "No changes to commit"
          fi
